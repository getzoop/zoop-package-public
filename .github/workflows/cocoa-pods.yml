name: Update Podspec on Release

on:
  release:
    types:
      - published

jobs:
  generate_podspec:
    runs-on: ubuntu-latest
    env:
      SDK_NAME: TapOnPhone-iOS
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby for Podspec generation
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'

      - name: Get release version and name
        id: get_release_info
        run: |
          RELEASE_NAME="${{ github.event.release.name }}"
          RELEASE_TAG="${{ github.event.release.tag_name }}"
          echo "Release Name: $RELEASE_NAME"
          echo "Release Tag: $RELEASE_TAG"

          if [[ "$RELEASE_NAME" =~ ^(TapOnPhoneSDK-iOS)\ \-\ ([0-9]+\.[0-9]+\.[0-9]+)$ ]]; then
            echo "MATCHED=true" >> $GITHUB_ENV
            BASE_NAME="${BASH_REMATCH[1]}"
            CLEAN_VERSION="${BASH_REMATCH[2]}"
            echo "BASE_NAME=$BASE_NAME" >> $GITHUB_ENV
            echo "CLEAN_VERSION=$CLEAN_VERSION" >> $GITHUB_ENV
          else
            echo "MATCHED=false" >> $GITHUB_ENV
          fi

      - name: Exit if release name doesn't match the pattern
        if: env.MATCHED == 'false'
        run: |
          echo "Release name does not match the expected pattern. Exiting."
          exit 0

      - name: Download the .zip file from the public release
        run: |
          RELEASE_URL="https://github.com/getzoop/zoop-package-public/releases/download/${{ github.event.release.tag_name }}/TapOnPhoneSDK-iOS.zip"
          echo "Downloading .zip from: $RELEASE_URL"
          
          curl -L -o sources.zip $RELEASE_URL
          
          if [[ ! -f sources.zip ]]; then
            echo "Error: .zip file not downloaded successfully."
            exit 1
          fi

      - name: Unzip the .zip file
        run: |
          unzip sources.zip -d sources/
          
          if [[ ! -d sources/TapOnPhoneSDK.xcframework ]]; then
            echo "Error: Expected xcframework file not found in the extracted folder."
            exit 1
          fi

      - name: Get commit author info
        id: author_info
        run: |
          AUTHOR_NAME=$(git log -1 --pretty=format:'%an')
          AUTHOR_EMAIL=$(git log -1 --pretty=format:'%ae')
          echo "author_name=$AUTHOR_NAME" >> $GITHUB_OUTPUT
          echo "author_email=$AUTHOR_EMAIL" >> $GITHUB_OUTPUT

      - name: Create Podspec file
        run: |
          XCFRAMEWORK_ROOT="sources"
          PODSPEC_CONTENT="
          Pod::Spec.new do |s|
            s.name             = '${SDK_NAME}'
            s.version          = '${{ env.CLEAN_VERSION }}'
            s.summary          = 'Tap on phone SDK for iOS'
            s.description      = 'Receive payments with iPhone using NFC'
            s.homepage         = 'https://github.com/getzoop/zoop-package-public'
            s.license          = { :type => 'MIT' }
            s.author           = { '${{ steps.author_info.outputs.author_name }}' => '${{ steps.author_info.outputs.author_email }}' }
            s.source           = { :git => 'https://github.com/getzoop/zoop-package-public.git', :tag => '${{ github.event.release.tag_name }}' }
            s.source_files     = '${XCFRAMEWORK_ROOT}/**/*.h'
            s.public_header_files = '${XCFRAMEWORK_ROOT}/**/*.h'
            s.vendored_frameworks = '${XCFRAMEWORK_ROOT}/TapOnPhoneSDK.xcframework'
            s.requires_arc     = true
            s.pod_target_xcconfig = { 'SWIFT_VERSION' => '5.0' }
            s.frameworks        = 'UIKit'
          end
          "
          echo "$PODSPEC_CONTENT" > "${SDK_NAME}.podspec"
          echo "Podspec file created: ${SDK_NAME}.podspec"

      - name: Create Swift Package file
        run: |
          ROOT="./sources"
          PACKAGE_NAME="$BASE_NAME"
          PACKAGE_VERSION="${{ env.CLEAN_VERSION }}"

          PACKAGE_CONTENT="
          // swift-tools-version: 5.6
          import PackageDescription

          let package = Package(
              name: \"${PACKAGE_NAME}\",
              platforms: [
                  .iOS(.v11)
              ],
              products: [
                  .library(
                      name: \"${PACKAGE_NAME}\",
                      targets: [\"TapOnPhoneSDK\"])
              ],
              targets: [
                  .binaryTarget(
                      name: \"TapOnPhoneSDK\",
                      path: \"${ROOT}/TapOnPhoneSDK.xcframework\"
                  )
              ]
          )
          "
          echo "$PACKAGE_CONTENT" > Package.swift
          echo "Package.swift criado com sucesso"

      - name: Commit and push Podspec file to specific branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          
          BRANCH_NAME="release-${{ github.event.release.tag_name }}"
          git checkout -b "$BRANCH_NAME" || git checkout "$BRANCH_NAME"
          
          git add --all
          git commit -m "Update Podspec for release ${{ env.CLEAN_VERSION }}"
          git push origin "$BRANCH_NAME"
